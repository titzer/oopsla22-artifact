diff --git a/Source/JavaScriptCore/jsc.cpp b/Source/JavaScriptCore/jsc.cpp
index 868dda1e02..1bc3d3793b 100644
--- a/Source/JavaScriptCore/jsc.cpp
+++ b/Source/JavaScriptCore/jsc.cpp
@@ -172,9 +172,11 @@ struct MemoryFootprint {
 
 using namespace JSC;
 
+#ifndef ENABLE_STATIC_JSC
 JS_EXPORT_PRIVATE Quantity llint_samples;
 JS_EXPORT_PRIVATE Quantity bbq_samples;
 JS_EXPORT_PRIVATE Quantity omg_samples;
+#endif
 
 namespace {
 
diff --git a/Source/JavaScriptCore/wasm/WasmBBQPlan.cpp b/Source/JavaScriptCore/wasm/WasmBBQPlan.cpp
index 571853f4d3..9c65654881 100644
--- a/Source/JavaScriptCore/wasm/WasmBBQPlan.cpp
+++ b/Source/JavaScriptCore/wasm/WasmBBQPlan.cpp
@@ -204,8 +204,10 @@ void BBQPlan::compileFunction(uint32_t functionIndex)
     m_wasmInternalFunctions[functionIndex] = compileFunction(functionIndex, m_compilationContexts[functionIndex], m_unlinkedWasmToWasmCalls[functionIndex], m_tierUpCounts[functionIndex].get());
     {
         auto linkBuffer = makeUnique<LinkBuffer>(*m_compilationContexts[functionIndex].wasmEntrypointJIT, nullptr, LinkBuffer::Profile::Wasm, JITCompilationCanFail);
-        if (linkBuffer->isValid())
+        if (linkBuffer->isValid()) {
+            bbq_samples.out_bytes += linkBuffer->size();
             m_wasmInternalFunctionLinkBuffers[functionIndex] = WTFMove(linkBuffer);
+        }
     }
 
     if (m_exportedFunctionIndices.contains(functionIndex) || m_moduleInformation->referencedFunctions().contains(functionIndex)) {
diff --git a/Source/JavaScriptCore/wasm/WasmOMGPlan.cpp b/Source/JavaScriptCore/wasm/WasmOMGPlan.cpp
index 7fd56b8905..9fa3138b67 100644
--- a/Source/JavaScriptCore/wasm/WasmOMGPlan.cpp
+++ b/Source/JavaScriptCore/wasm/WasmOMGPlan.cpp
@@ -92,6 +92,8 @@ void OMGPlan::work(CompilationEffort)
         return;
     }
 
+    omg_samples.out_bytes += linkBuffer.size();
+    
     InternalFunction* internalFunction = parseAndCompileResult->get();
     Vector<CodeLocationLabel<ExceptionHandlerPtrTag>> exceptionHandlerLocations;
     computeExceptionHandlerLocations(exceptionHandlerLocations, internalFunction, context, linkBuffer);
